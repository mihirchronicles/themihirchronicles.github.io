{"data":{"site":{"siteMetadata":{"title":"The Mihir Chronicles"}},"allMarkdownRemark":{"totalCount":11,"edges":[{"node":{"html":"<p>Also known as a fat arrow, <code class=\"language-text\">=&gt;</code>. This ES6 feature is a fat topic, so I'll concentrate on one aspect today.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n<span class=\"token string\">'Hydrogen'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Helium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Lithium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Beryllium'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>length<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Above is an altered version of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">MDN</a> JavaScript Demo, where you will find a wealth of information on what fat arrows can do for you. The first function in the list is written without fat arrows. The last three functions are variations of the first function, showing how fat arrows can be used to write shorter function expressions, and therefore less code. You will need a code compiler like <a href=\"https://babeljs.io/\">Babel</a> to compile fat arrows into ES5 syntax so older browsers can use your JavaScript.</p>\n<p>There are a <em>lot</em> of resources that try explaining this syntax. Try Wes Bos's <a href=\"https://wesbos.com/arrow-functions/\">introduction</a> for a start. This is complicated subject matter, though, so I suggest searching around for different posts, reading a few and finding ones that make most sense to you.</p>","id":"077d368e-cd25-52ca-8a75-fe81182a78a7","frontmatter":{"title":"Arrow","date":"02 July, 2018","path":"/explore/arrow"}}},{"node":{"html":"<p>Also known as a fat arrow, <code class=\"language-text\">=&gt;</code>. This ES6 feature is a fat topic, so I'll concentrate on one aspect today.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n<span class=\"token string\">'Hydrogen'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Helium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Lithium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Beryllium'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>length<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Above is an altered version of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">MDN</a> JavaScript Demo, where you will find a wealth of information on what fat arrows can do for you. The first function in the list is written without fat arrows. The last three functions are variations of the first function, showing how fat arrows can be used to write shorter function expressions, and therefore less code. You will need a code compiler like <a href=\"https://babeljs.io/\">Babel</a> to compile fat arrows into ES5 syntax so older browsers can use your JavaScript.</p>\n<p>There are a <em>lot</em> of resources that try explaining this syntax. Try Wes Bos's <a href=\"https://wesbos.com/arrow-functions/\">introduction</a> for a start. This is complicated subject matter, though, so I suggest searching around for different posts, reading a few and finding ones that make most sense to you.</p>","id":"9cfaddc7-685a-59f7-a96e-6a7ad53e335f","frontmatter":{"title":"Arrow","date":"02 July, 2018","path":"/explore/arrow"}}},{"node":{"html":"<p>Also known as a fat arrow, <code class=\"language-text\">=&gt;</code>. This ES6 feature is a fat topic, so I'll concentrate on one aspect today.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n<span class=\"token string\">'Hydrogen'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Helium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Lithium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Beryllium'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>length<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Above is an altered version of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">MDN</a> JavaScript Demo, where you will find a wealth of information on what fat arrows can do for you. The first function in the list is written without fat arrows. The last three functions are variations of the first function, showing how fat arrows can be used to write shorter function expressions, and therefore less code. You will need a code compiler like <a href=\"https://babeljs.io/\">Babel</a> to compile fat arrows into ES5 syntax so older browsers can use your JavaScript.</p>\n<p>There are a <em>lot</em> of resources that try explaining this syntax. Try Wes Bos's <a href=\"https://wesbos.com/arrow-functions/\">introduction</a> for a start. This is complicated subject matter, though, so I suggest searching around for different posts, reading a few and finding ones that make most sense to you.</p>","id":"f78714b7-e1d6-5cb5-946a-f6041dde5df0","frontmatter":{"title":"Arrow","date":"02 July, 2018","path":"/explore/arrow"}}},{"node":{"html":"<p>Also known as a fat arrow, <code class=\"language-text\">=&gt;</code>. This ES6 feature is a fat topic, so I'll concentrate on one aspect today.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n<span class=\"token string\">'Hydrogen'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Helium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Lithium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Beryllium'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>length<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Above is an altered version of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">MDN</a> JavaScript Demo, where you will find a wealth of information on what fat arrows can do for you. The first function in the list is written without fat arrows. The last three functions are variations of the first function, showing how fat arrows can be used to write shorter function expressions, and therefore less code. You will need a code compiler like <a href=\"https://babeljs.io/\">Babel</a> to compile fat arrows into ES5 syntax so older browsers can use your JavaScript.</p>\n<p>There are a <em>lot</em> of resources that try explaining this syntax. Try Wes Bos's <a href=\"https://wesbos.com/arrow-functions/\">introduction</a> for a start. This is complicated subject matter, though, so I suggest searching around for different posts, reading a few and finding ones that make most sense to you.</p>","id":"c29784be-7009-571b-80c7-0386878f45f7","frontmatter":{"title":"Arrow","date":"02 July, 2018","path":"/explore/arrow"}}},{"node":{"html":"<p>Also known as a fat arrow, <code class=\"language-text\">=&gt;</code>. This ES6 feature is a fat topic, so I'll concentrate on one aspect today.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n<span class=\"token string\">'Hydrogen'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Helium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Lithium'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Beryllium'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>length<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Above is an altered version of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">MDN</a> JavaScript Demo, where you will find a wealth of information on what fat arrows can do for you. The first function in the list is written without fat arrows. The last three functions are variations of the first function, showing how fat arrows can be used to write shorter function expressions, and therefore less code. You will need a code compiler like <a href=\"https://babeljs.io/\">Babel</a> to compile fat arrows into ES5 syntax so older browsers can use your JavaScript.</p>\n<p>There are a <em>lot</em> of resources that try explaining this syntax. Try Wes Bos's <a href=\"https://wesbos.com/arrow-functions/\">introduction</a> for a start. This is complicated subject matter, though, so I suggest searching around for different posts, reading a few and finding ones that make most sense to you.</p>","id":"72a44941-7db7-5788-a153-6a9722128730","frontmatter":{"title":"Arrow","date":"02 July, 2018","path":"/explore/arrow"}}},{"node":{"html":"<p>I keep getting tripped up at work by forgetting to write modular CSS classes. There are so many benefits to a robust CSS architecture that I really want to get it right. BEM is a methodology to achieve this. <code class=\"language-text\">Block</code>, <code class=\"language-text\">Element</code> and <code class=\"language-text\">Modifier</code>. A <code class=\"language-text\">Block</code> is a component or feature than can stand alone and is not dependent on any other code. It can be re-used anywhere. Next, an <code class=\"language-text\">Element</code>. This is always part of a <code class=\"language-text\">Block</code> and has no meaning on its own. Lastly, there is the <code class=\"language-text\">Modifier</code>. This changes the behaviour and/or appearance of a <code class=\"language-text\">Block</code> or <code class=\"language-text\">Element</code>.</p>\n<p>Example:</p>\n<p><strong><code class=\"language-text\">.button</code></strong> is a block.</p>\n<p><strong><code class=\"language-text\">.button__label</code></strong> is an element.</p>\n<p><strong><code class=\"language-text\">.button--confirm</code></strong> is a modifier.</p>\n<p>See resources <a href=\"http://getbem.com/introduction/\">here</a> and <a href=\"https://zellwk.com/blog/css-architecture-1/\">here</a>.</p>","id":"c7bceec4-2edd-54fe-ba94-6e6c601c1e61","frontmatter":{"title":"BEM","date":"01 July, 2018","path":"/explore/bem"}}},{"node":{"html":"<p>I only just found out that <code class=\"language-text\">::before</code> (<code class=\"language-text\">:before</code>) and <code class=\"language-text\">::after</code> (<code class=\"language-text\">:after</code>) are pseudo elements, which are different from pseudo classes. Both of these are grouped under pseudo selectors. I like this quote from MDN ~</p>\n<blockquote>\n<p>Even the most skilled web developers are still amazed by what's possible using selectors.</p>\n</blockquote>\n<p>pseudo selectors are only two types of selectors. The others are: simple selectors, attribute selectors, multiple selectors and combinators. All of these help us to target and style HTML elements.</p>\n<p>So, pseudo selectors include both pseudo elements and pseudo classes. They are added to the end of other selectors, and don't apply to whole elements, only parts of them.</p>\n<p>The pseudo classes (e.g. <code class=\"language-text\">:hover</code>, <code class=\"language-text\">:focus</code>, and <code class=\"language-text\">:nth-of-type()</code> - plus 38 others) style elements in a <em>certain state</em>.</p>\n<p>The pseudo elements (e.g. <code class=\"language-text\">::after</code>, <code class=\"language-text\">::before</code>, and <code class=\"language-text\">::first-letter</code> - plus 3 others, not including experimental ones) apparently need <code class=\"language-text\">::</code> rather than <code class=\"language-text\">:</code>, although I've used them with only one. These don't depend on the state of an element.</p>\n<p>See this <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Pseudo-classes_and_pseudo-elements\">MDN</a> page for great examples and to use their awesome active learning playground (I did and it was great for learning)!</p>","id":"76cbc1ac-b6c5-5928-ac42-258c56acddb0","frontmatter":{"title":"Psuedo Selectors","date":"01 July, 2018","path":"/explore/psuedo-selectors"}}},{"node":{"html":"<p>The <code class=\"language-text\">this</code> keyword is found in various programming languages, and behaves a certain way in JavaScript. Apparently even experienced developers get confused by it.</p>\n<p>See this <a href=\"https://codepen.io/ambrwlsn90/pen/ELEmxw?editors=1111\">codepen</a> for some example code. It showcases one of the six ways <code class=\"language-text\">this</code> is used in JavaScript - thanks to what I learned from Zell Liew's great <a href=\"https://zellwk.com/blog/this/\">blog post</a>. I really recommend this post for beginners - you can try the examples in your console! In short, <code class=\"language-text\">this</code> can be used globally, in object constructions, object methods, simple functions, arrow functions, and event listeners. See the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\">MDN docs</a> for more code-heavy examples.</p>","id":"ec81a50d-4d58-5eec-a11e-eef5be46bd15","frontmatter":{"title":"This","date":"01 July, 2018","path":"/explore/this"}}},{"node":{"html":"<p>JSON, or JavaScript Object Notation, is a simple language that represents objects on the Web and facilitates data exchange. LD, or Linked Data, allows for the expression of critical data on a site, and for it to be shared across sites. I first heard of it at <a href=\"https://beyondtellerrand.com/events/duesseldorf-2018/speakers\">Beyond Tellerrand</a> in Düsseldorf on May 7th, during a talk about web annotations by <a href=\"https://lyza.com\">Lyza Danger Gardner</a>. JSON-LD allows expressions of linked data in JavaScript. It's like grammar for describing strutured data. It can be thought of as JSON, but with added semantics. And it can be easily implemented into existing JSON structures. Here's some example JSON:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Amber Wilson\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"homepage\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://amberwilson.co.uk\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"picture\"</span><span class=\"token punctuation\">:</span> \"https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>twitter<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>account<span class=\"token operator\">/</span>\n    profil_image<span class=\"token operator\">/</span>ambrwlsn90\"\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Here is similar information in JSON-LD format:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"@context\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"xsd\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://www.w3c.org/2001/XMLSchema#\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"foaf\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://xmlns.com/foaf/0.1/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"@id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://me.amberwilson.co.uk\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"@type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"foaf:Person\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"foaf:name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Amber Wilson\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Above, we see that <code class=\"language-text\">context</code> can be added to data. <code class=\"language-text\">foaf</code> stands for \"friend of a friend\" (see <a href=\"http://www.foaf-project.org/\">here</a>), which deals with people-related terms. <code class=\"language-text\">id</code> and <code class=\"language-text\">type</code>, like <code class=\"language-text\">context</code>, assist in making our data shareable and semantic.</p>\n<p>The concept of JSON-LD is simple, but using it can take getting used to. For more in-depth information, see <a href=\"https://json-ld.org/primer/latest/\">here</a>.</p>","id":"474ca3da-6a2e-56aa-83f1-002b1c58a2a8","frontmatter":{"title":"JSON-LD","date":"01 July, 2018","path":"/explore/json-ld"}}},{"node":{"html":"<p>CSS layout is something that amazes and confuses me at the same time. There seem to be so many approaches (e.g. floats, flexbox, grid), and so many frameworks (way too many to mention). The paradox of choice seems to apply here.</p>\n<p>I love hearing from people about CSS layout, and I was lucky to hear <a href=\"http://www.miriamsuzanne.com/\">Miriam Suzanne</a> talk about it at <a href=\"https://beyondtellerrand.com/events/duesseldorf-2018/speakers\">Beyond Tellerrand</a> (check out the awesome layout on her site). The message she gave was to use CSS grid, and provide fallbacks for browsers that aren't grid-compatible. She reasons that as grid makes layouts so easy (and naturally responsive), that there is time to re-create fallback layouts, which allows more creative control.</p>\n<blockquote>\n<p lang=\"en\" dir=\"ltr\">Often I allow fallback layouts to be much simpler. CSS Grid has power to create layouts that have\nno *exact* fallback. Since grid makes many layouts easier, I have extra time to do both. Similar\ntime spent, more creative control.<br><br>Your mileage will depend on your constraints.</p>&mdash;\nMiriam Suzanne (@mirisuzanne) <a href=\"https://twitter.com/mirisuzanne/status/993813309441880064?ref_src=twsrc%5Etfw\">May 8, 2018</a></blockquote>\n<p>One thing I really like about CSS layouts is that they aren't designed to be used in isolation. On the contrary, you can mix and match them. A grid item can become a flex container, and a flex item can become a grid. You can even use floats with flexbox and grid.</p>\n<p>I am half-way through Wes Bos's <a href=\"https://cssgrid.io/\">CSS grid</a> course and already have ideas I am excited to make come to life using grid. There are looots of great posts and articles out there by people who have had tonnes of fun and learned loads by using grid. I really recommend finding some and making some stuff!</p>","id":"4dc47a58-b331-5be2-b828-9e059306ade2","frontmatter":{"title":"CSS Layout","date":"01 July, 2018","path":"/explore/css-layout"}}},{"node":{"html":"<p>Recently at work, I've watched other developers use <code class=\"language-text\">console.log</code> a lot in code to find desired values given by certain functions. I am often still confused where to put <code class=\"language-text\">console.log</code>, and it is definitely not the only way to debug, so I've also begun to use the developer tools JavaScript debugger in Firefox and Chrome. These tools allow you to pause the execution of your code, and walk through it to help you find bugs.</p>\n<p>The debugger can do a lot, and it'd take a much longer post to walk through this tool's UI, so I'll mention four of the most commonly used debugging methods here.</p>\n<ul>\n<li>\n<p><strong>Step over code</strong></p>\n<ul>\n<li>Steps over a function that doesn't contain a bug and runs its code</li>\n</ul>\n</li>\n<li>\n<p><strong>Step into code</strong></p>\n<ul>\n<li>Steps inside a function and allows you to run each part separately</li>\n</ul>\n</li>\n<li>\n<p><strong>Step out of code</strong></p>\n<ul>\n<li>Steps out of a function you are inside, and runs its code</li>\n</ul>\n</li>\n<li><strong>Resume execution of code</strong></li>\n</ul>\n<p>Debugging is something developers have to be really good at. So don't be scared to do it! Or, be scared but do it anyway, you'll get better :)</p>\n<p>Check out the docs on the <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Debugger\">Firefox</a> debugger and the <a href=\"https://developers.google.com/web/tools/chrome-devtools/javascript/reference#breakpoints\">Chrome</a> debugger. Lots of great info there to help you get started. Also check out <a href=\"https://peterlyons.com/js-debug\">this article</a> from Peter Lyons. He explains debugging of both front-end and back-end JavaScript code.</p>\n<p>Also, check <a href=\"https://daverupert.com/2018/05/my-struggle-with-testing-code/\">this</a> out - an honest post about how even experienced devs find it hard to debug.</p>","id":"52057bc0-dc2a-5433-a31e-9c09ac3f6e95","frontmatter":{"title":"Debugging","date":"01 July, 2018","path":"/explore/debugging"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}