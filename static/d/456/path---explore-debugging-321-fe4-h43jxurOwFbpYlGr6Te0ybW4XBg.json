{"data":{"markdownRemark":{"html":"<p>Recently at work, I've watched other developers use <code class=\"language-text\">console.log</code> a lot in code to find desired values given by certain functions. I am often still confused where to put <code class=\"language-text\">console.log</code>, and it is definitely not the only way to debug, so I've also begun to use the developer tools JavaScript debugger in Firefox and Chrome. These tools allow you to pause the execution of your code, and walk through it to help you find bugs.</p>\n<p>The debugger can do a lot, and it'd take a much longer post to walk through this tool's UI, so I'll mention four of the most commonly used debugging methods here.</p>\n<ol>\n<li>Step over code, steps over a function that doesn't contain a bug and runs its code</li>\n<li>Step into code, steps inside a function and allows you to run each part separately</li>\n<li>Step out of code, steps out of a function you are inside, and runs its code</li>\n<li>Resume execution of code</li>\n</ol>\n<p>Debugging is something developers have to be really good at. So don't be scared to do it! Or, be scared but do it anyway, you'll get better :)</p>\n<p>Check out the docs on the <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Debugger\">Firefox</a> debugger and the <a href=\"https://developers.google.com/web/tools/chrome-devtools/javascript/reference#breakpoints\">Chrome</a> debugger. Lots of great info there to help you get started. Also check out <a href=\"https://peterlyons.com/js-debug\">this article</a> from Peter Lyons. He explains debugging of both front-end and back-end JavaScript code.</p>\n<p>Also, check <a href=\"https://daverupert.com/2018/05/my-struggle-with-testing-code/\">this</a> out - an honest post about how even experienced devs find it hard to debug.</p>\n<p>A lot of people use <code class=\"language-text\">console.log</code> to debug in the console.</p>\n<p>The <code class=\"language-text\">log()</code> method of <code class=\"language-text\">console</code> logs things to the web console. What some people may not know is that you can log things in nice ways! Here are three:</p>\n<p><strong>1. Computed property names -</strong></p>\n<p>The following objects could be logged one at a time:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> cat <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Fluffy'</span><span class=\"token punctuation\">,</span> colour<span class=\"token punctuation\">:</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> specialSkill<span class=\"token punctuation\">:</span> <span class=\"token string\">'staring'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> dog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Thor'</span><span class=\"token punctuation\">,</span> colour<span class=\"token punctuation\">:</span> <span class=\"token string\">'brown'</span><span class=\"token punctuation\">,</span> specialSkill<span class=\"token punctuation\">:</span> <span class=\"token string\">'running'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> fish <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Glub'</span><span class=\"token punctuation\">,</span> colour<span class=\"token punctuation\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> specialSkill<span class=\"token punctuation\">:</span> <span class=\"token string\">'blowing bubbles'</span> <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>And the results would be as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {name: \"Fluffy\", colour: \"orange\", specialSkill: \"staring\"}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {name: \"Thor\", colour: \"brown\", specialSkill: \"running\"}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fish<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {name: \"Glub\", colour: \"blue\", specialSkill: \"blowing bubbles\"}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Or, they could be logged with a name label using 'computed property names'. To do this, create an object with the variables as keys:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> cat<span class=\"token punctuation\">,</span> dog<span class=\"token punctuation\">,</span> fish <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {cat: {…}, dog: {…}, fish: {…}}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Inside this object, there will be the details of each variable with its corresponding key:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">cat<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Fluffy\"</span><span class=\"token punctuation\">,</span> colour<span class=\"token punctuation\">:</span> <span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">,</span> specialSkill<span class=\"token punctuation\">:</span> <span class=\"token string\">\"staring\"</span><span class=\"token punctuation\">}</span>\ndog<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Thor\"</span><span class=\"token punctuation\">,</span> colour<span class=\"token punctuation\">:</span> <span class=\"token string\">\"brown\"</span><span class=\"token punctuation\">,</span> specialSkill<span class=\"token punctuation\">:</span> <span class=\"token string\">\"running\"</span><span class=\"token punctuation\">}</span>\nfish<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Glub\"</span><span class=\"token punctuation\">,</span> colour<span class=\"token punctuation\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> specialSkill<span class=\"token punctuation\">:</span> <span class=\"token string\">\"blowing bubbles\"</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><strong>2. CSS in the console -</strong></p>\n<p>Define styles like this in the console:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> styles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'background: linear-gradient(#21618C, #5DADE2)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'padding: 5px'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'border-radius: 8px'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'text-align: center'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'color: white'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'display: block'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">';'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Then prefix console log with the <code class=\"language-text\">%c</code> flag, adding the <code class=\"language-text\">styles</code> variable to the end:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token template-string\"><span class=\"token string\">`%c My cat is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cat<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cat<span class=\"token punctuation\">.</span>colour<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cat<span class=\"token punctuation\">.</span>specialSkill<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n  styles\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Try it in your console or look at <a href=\"https://codesandbox.io/embed/determined-wozniak-4lt93\">this</a> example on CodeSandbox!</p>\n<p><strong>3. Tables in the console</strong></p>\n<p>To display objects in a table in order to more easily compare them, try using <code class=\"language-text\">console.table</code>. You can do so with the animal objects above by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>cat<span class=\"token punctuation\">,</span> dog<span class=\"token punctuation\">,</span> fish<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Not only will there be a nicely-formatted table to see in the console, but the (unlabeled) objects will also be displayed as well.</p>\n<p><strong>Note</strong></p>\n<p>All of these things make console logging a little better. Not sure how many I will start using myself, but I'll give them a go to see whether I like them :)</p>","frontmatter":{"date":"01 March, 2019","path":"/explore/debugging","title":"Debugging"},"fields":{"readingTime":{"text":"4 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}