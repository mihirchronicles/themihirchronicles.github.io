{"data":{"markdownRemark":{"html":"<h1>Work in Progress</h1>\n<h3>Who is a Product Manager?</h3>\n<p>A person who is responsible to set overall capability vision and direction, own the quality and delivery of products, ensure roadmap is prioritized to address market opportunities, and lead the product management discipline for the team. <em>Product Owner</em> is a role you play on a scrum team. <em>Product Manager</em> is the job.</p>\n<blockquote>\n<p>A good product takes chaos and creates order. — Brian Nogard</p>\n</blockquote>\n<p>How do you set yourself up for success as a product manager? To master the art of product management requires many years of practice. The only way to learn it is to actually do it. Become a knowledge sponge, talk to external and internal product managers, read everything about the topic, copy others before you try to find your own voice and do something unique. Doing something unique is most probable after achieving mastery.</p>\n<ul>\n<li>We are most interested in the “creation” of a new scientific principle or a new application of an old one, but we can be general here. One way of investigating the problem is to consider the great ideas of the past and see just how they were generated. Unfortunately, the method of generation is never clear even to the “generators” themselves.</li>\n</ul>\n<h2>Key Responsibilities</h2>\n<p>On a practical note, you are responsible for the following tasks on the team: running product review, maintaining/updating the product roadmap, and doing sprint planning. Here are two slides that help clarify your role vs the engineering manager.</p>\n<ul>\n<li>Understand the customer deeply — this means user studies, you have to go talk to the users every week and spend a lot of time with them to hear their pain, get inside their head. product managers know the market, the product, the product line and the competition extremely well and operate from a strong basis of knowledge and confidence. </li>\n<li>Be metrics driven , you should be using time series data to give you insight into what people are doing with the product and see if the changes you are making are improving things. If you haven’t instrumented the app and chosen a metric you want to improve, you are just guessing.</li>\n<li>The product manager is responsible for prioritizing the product roadmap and communicating it to the team. Not as a top down dictator, but as a consensus builder amongst all the stakeholders, breaking a tie when necessary.</li>\n<li>You need to be a communication hub, both when building consensus internally on priorities/roadmap, but also externally communicating changes to customers. Users need to see that the product is continually improving by hearing about it from you. Everyone internally needs to be on the same page when changes roll out. You are the point of contact for all things related to this product.</li>\n<li>Once you master all of that, you will need to develop product vision (conviction about where things are going in the future, make the hard calls about what to eliminate, etc) and strive to make something truly great. You can think about it not just as eliminating customer pain, but actually creating customer delight. In rare instances, you can wind up creating something that people actually love. (very few products attain this — nobody says they love Tide detergent, but people do say they love their Harley Davidson).</li>\n<li>Good product managers don’t get all of their time sucked up by the various organizations that must work together to deliver right product right time. They don’t take all the product team minutes, they don’t project manage the various functions, they are not gophers for engineering. They are not part of the product team; they manage the product team. Engineering teams don’t consider Good Product Managers a “marketing resource.” Good product managers are the marketing counterpart of the engineering manager. Good product managers crisply define the target, the “what” (as opposed to the how) and manage the delivery of the “what.” Bad product managers feel best about themselves when they figure out “how”. Good product managers communicate crisply to engineering in writing as well as verbally. Good product managers don’t give direction informally. Good product managers gather information informally.</li>\n<li>Good product managers create leveragable collateral, FAQs, presentations, white papers. Bad product managers complain that they spend all day answering questions for the sales force and are swamped. Good product managers anticipate the serious product flaws and build real solutions. Bad product managers put out fires all day. Good product managers take written positions on important issues (competitive silver bullets, tough architectural choices, tough product decisions, markets to attack or yield). Bad product managers voice their opinion verbally and lament that the “powers that be” won’t let it happen. Once bad product managers fail, they point out that they predicted they would fail.</li>\n<li>Good product managers know the market, the product, the product line and the competition extremely well and operate from a strong basis of knowledge and confidence. A good product manager is the CEO of the product. A good product manager takes full responsibility and measures themselves in terms of the success of the product. The are responsible for right product/right time and all that entails. A good product manager knows the context going in (the company, our revenue funding, competition, etc.), and they take responsibility for devising and executing a winning plan (no excuses).</li>\n<li>Bad product managers have lots of excuses. Not enough funding, the engineering manager is an idiot, Microsoft has 10 times as many engineers working on it, I’m overworked, I don’t get enough direction. Barksdale doesn’t make these kinds of excuses and neither should the CEO of a product.</li>\n<li>Good product managers focus the team on revenue and customers. Bad product managers focus team on how many features Microsoft is building. Good product managers define good products that can be executed with a strong effort. Bad product managers define good products that can’t be executed or let engineering build whatever they want (i.e. solve the hardest problem).</li>\n<li>Good product managers think in terms of delivering superior value to the market place during inbound planning and achieving market share and revenue goals during outbound. Bad product managers get very confused about the differences amongst delivering value, matching competitive features, pricing, and ubiquity. Good product managers decompose problems. Bad product managers combine all problems into one.</li>\n<li>Good product managers think about the story they want written by the press. Bad product managers think about covering every feature and being really technically accurate with the press. Good product managers ask the press questions. Bad product managers answer any press question. Good product managers assume press and analyst people are really smart. Bad product managers assume that press and analysts are dumb because they don’t understand the difference between “push” and “simulated push.”</li>\n<li>Good product managers err on the side of clarity vs. explaining the obvious. Bad product managers never explain the obvious. Good product managers define their job and their success. Bad product managers constantly want to be told what to do.</li>\n<li>Good product managers send their status reports in on time every week, because they are disciplined. Bad product managers forget to send in their status reports on time, because they don’t value discipline.</li>\n</ul>\n<p>At large technology companies like Google, product management can be a very stressful vocation. The truth is that you serve at the behest of your colleagues - you can't win without your team, and you certainly won't succeed without their backing. Given this, here's advice I share, and try to live by:</p>\n<ol>\n<li>Product managers wear three hats\nCongrats, as a product manager you get three jobs:\na) Project manager: keep the wheels on the bus, the trains running on time and over-communicating about status, documentation, strategy, vision, etc\nb) Product manager: the actual feature and requirements spec'ing, working with your x-functional team to get things built and shipped\nc) CEO: the buck stops with you no matter what the org chart says. When your product succeeds lavish praise on the team. If your product is struggling you don't blame sales or marketing - you help them get on track.</li>\n</ol>\n<p>Whether you're a greenhorn PM or a senior jedi master, you always wear these hats. It's just that your percentage of time allocated to each of the roles shifts away from A and towards C. Fresh out of school and you might be 35% project manager/60% product manager/5% CEO. It's important that the CEO # is never 0% -- even the newest PM hire should have something they approach this way. It builds accountability and a way of thinking that becomes essential to their development.</p>\n<ol start=\"2\">\n<li>Seek collaboration, not necessarily consensus\nIn their leadership of flat x-functional teams some PMs seek consensus, thinking this is the best way to get a team moving in the same direction. I believe this is wrong. Collaboration, communication and inclusion are essential - you'll die on the vine without your team. But it's not consensus you should seek. It's a mandate to lead in a particular direction. The backing to make the call.</li>\n</ol>\n<p>You acquire your mandate power via upper mgmt supporting your strategic plan, from your x-functional team leads feeling included and empowered, and from your team members knowing that they can contribute and have ownership over their areas, but at the same time have a strong PM who will make the tough decisions.</p>\n<ol start=\"3\">\n<li>\n<p>Give PMs goals, not projects\nProduct managers turns goals into projects with the help of their teams and entrepreneurship. At YouTube we try to give our PMs broad ownership and then work with them to ensure the projects they initiate fulfill the needs and measurable goals of the area and the company.</p>\n</li>\n<li>\n<p>Overwhelm them as a prioritization exercise\nToo much to do. That's the perpetual state of being a PM. But the benefit is you focus on the most meaningful actions and move from highest nail to highest nail. If you're leading a group of PMs the tricky thing is to make sure you're still positioning them for success. Gentle nudges, help in prioritizing, etc. But at the end of the day they need to develop this critical muscle where they learn to delegate and to pull resources towards them. The leveraged PM doesn't say \"I can't get it done,\" they prioritize and help identify the resources necessary for success.</p>\n</li>\n<li>\n<p>\"Not on my watch\"\nBe willing to stand up for what you believe, especially when you're representing your users. Hard decisions make great products. Your job is not to carve the safe route. Your job is to increase the probability that you'll be delighting millions of users in a sustainable fashion. Don't let others design your product for you.</p>\n</li>\n<li>\n<p>You are a caretaker of something bigger\nYour job is to take a product (and company) from one defined phase to the next. Then you will pass it on for another phase. The leader for the next phase might be you again or it could be someone else. Either way you should be handing off something which is sustainable. If your product was a winner solely because you carried the weight of the world on your shoulders then you're not doing your job. Build leverage, build an organization around you, find people who will be even better than you.</p>\n</li>\n</ol>\n<p>What are some product management tips that you've come across?</p>\n<ul>\n<li>People don't want to use your software. They want to lose weight, laugh, be entertained, get smarter, spend time with loved ones, go home on time, sleep adequately, eat good food, be happy.\nYour product is only as good as the experiences it enables people to have.</li>\n<li>Person will set overall capability vision and direction, own the quality and delivery of software products, ensure roadmap is prioritized to address market opportunities, and lead the product management discipline for the team.</li>\n<li>Product Owner is a role you play on a Scrum team. Product Manager is the job.</li>\n<li>The more experience one has building things, the less they separate ideation and implementation.</li>\n<li>Lemonis is famous for his People/Process/Product principle, where he analyzes businesses on the quality of people, excellence and relevance of product, and the best way to deliver the product.</li>\n<li>Ultimately, the best thing you can do to prepare for a career in Product Management is to build. Manage and “own” a project from inception through execution and operation. Create KPIs and measure your impact. Volunteer for stretch projects. f you have a gap in client knowledge, shadow a CSC or Product Consultant. Learn about our clients, what jobs they are trying to accomplish with our products, and what problems Morningstar is uniquely positioned to solve for them. Become an expert in Morningstar’s products.</li>\n<li>All things considered, the best way to validate your idea is to discuss it with everyone you can engage in a meaningful and constructive dialogue. People who tend to keep their ideas to themselves or not able to communicate are normally not bound to success.</li>\n<li>Questions are a product manager’s best tool. The best way to understand what’s going on or how to get better is to pose probing questions to the people you manage, and above all, to yourself. Pausing to infuse intention into every move at the outset, take a step back at key points along the way, or stop for a tune-up if you’re already further along the road is critical to leveling up as a leader — and questions are the keys that unlock the door to development.</li>\n<li>Design shrinks the gap between what a product does and why it exists. Good design builds on earlier ideas, just as in math or physics. Good design is using reason to make decisions and to solve problems. Every man-made object you use in real life is designed, from forks and desks to keyboards and grocery bags and are the culminations of many hours of thinking and many more hours of trial and error.</li>\n<li>A good product takes chaos and creates order. — Brian Nogard</li>\n<li>'Customers don't have needs, they just want to make progress within the system they belong.' Eye-opening statement from Alan Klement's book. - Jérémie Pottier @dzey</li>\n</ul>\n<p>What distinguishes the Top 1% of product managers from the Top 10%?\nThe top 10% of product managers excel at a few of these things. The top 1% excel at most or all of them:\nThink big - A 1% PM's thinking won't be constrained by the resources available to them today or today's market environment. They'll describe large disruptive opportunities, and develop concrete plans for how to take advantage of them.\nCommunicate - A 1% PM can make a case that is impossible to refute or ignore. They'll use data appropriately, when available, but they'll also tap into other biases, beliefs, and triggers that can convince the powers that be to part with headcount, money, or other resources and then get out of the way.\nSimplify - A 1% PM knows how to get 80% of the value out of any feature or project with 20% of the effort. They do so repeatedly, launching more and achieving compounding effects for the product or business.\nPrioritize - A 1% PM knows how to sequence projects. They balance quick wins vs. platform investments appropriately. They balance offense and defense projects appropriately. Offense projects are ones that grow the business. Defense projects are ones that protect and remove drag on the business (operations, reducing technical debt, fixing bugs, etc.).\nForecast and measure - A 1% PM is able to forecast the approximate benefit of a project, and can do so efficiently by applying past experience and leveraging comparable benchmarks. They also measure benefit once projects are launched, and factor those learnings into their future prioritization and forecasts.\nExecute - A 1% PM grinds it out. They do whatever is necessary to ship. They recognize no specific bounds to the scope of their role. As necessary, they recruit, they produce buttons, they do bizdev, they escalate, they tussle with internal counsel, they *.\nUnderstand technical trade-offs - A 1% PM does not need to have a CS degree. They do need to be able to roughly understand the technical complexity of the features they put on the backlog, without any costing input from devs. They should partner with devs to make the right technical trade-offs (i.e. compromise).\nUnderstand good design - A 1% PM doesn't have to be a designer, but they should appreciate great design and be able to distinguish it from good design. They should also be able to articulate the difference to their design counterparts, or at least articulate directions to pursue to go from good to great.\nWrite effective copy - A 1% PM should be able to write concise copy that gets the job done. They should understand that each additional word they write dilutes the value of the previous ones. They should spend time and energy trying to find the perfect words for key copy (button labels, nav, calls-to-action, etc.), not just words that will suffice.</p>\n<p>I'm not sure I've ever met a 1% PM, certainly not one that I identified as such prior to hiring. Instead of trying to hire one, you're better off trying to hire a 10% PM who strives to develop and improve along these dimensions.\nThis is a very interesting question. Let’s first understand what distinguishes the top 1% from the top 10% in any field. Let’s also acknowledge that the top 10% in any field are likely to be some of the top notch performers in that field. The margin of difference is likely small. Yet there must be that extra special “it” factor that separates the top 1% from the rest. As a result, the top 1% enjoy a well-earned exalted status. That is why we speak of Michael Jordan, Roger Federer, Serena Williams and such people in a different breath from their peers in the game.</p>\n<p>What is the special “it” factor?</p>\n<p>A few things come to mind. Most of the points below apply to team sports, and since building and launching a product is a team sport, this analogy might just work.</p>\n<p>Consistency\nThe top 1% athletes have been consistent performers at the top of their game for a very long period of time. Did they have bad days? Sure. Did they win all the time? Certainly not. The occasional failure notwithstanding these performers could be counted upon to deliver the goods a very high percentage of the time.</p>\n<p>What does consistency mean for the 1% PM?</p>\n<p>One might be tempted to say that if you delivered one hit product after another in one awesome company after another, that you would be a highly consistent 1% PM. Not really.</p>\n<p>Consistency is about performance, not about the outcome. The outcome is dependent on a lot of other things. For the 1% PM, it is about consistently excellent decision making and behaviors that contributes to successful outcomes. The 1% PM earns the trust of the team and the executive leadership and can be counted upon to take solid judgements and actions over a long period of time.</p>\n<p>Consistently solid decisions, for instance, about strategic direction, roadmap prioritization and tradeoffs, investment cases, etc. The quality of such decisions is reflected in revenue, usage and market share growth.</p>\n<p>Consistent behaviors that form the basis of those solid decisions, for instance, staying intimately connected with customers, users and the market at large, meeting deadlines and expectations for deliverables, always keeping a strategic perspective and clarity about what success means, communicating effectively and frequently, building strong relationships with all stakeholders, staying up to date with the technology stack and trends, to name a few.</p>\n<p>Consistent decision making and behavior is critical to the 1% PM building credibility and trust within her organization.</p>\n<p>Leadership\nIn a team sport like basketball, the top 1% players on the team emerge as the de-facto leaders. The team looks up to them. They lead by example. They provide the mentoring and coaching to the junior members of the team. They want everyone in the team to be successful. They do not let their egos come in the way of the goals of the team. If the team wins, they celebrate the team effort. If the team loses, the buck stops with them.</p>\n<p>Phil Jackson writes about Michael Jordan and Kobe Bryant in his book “Eleven Rings: The Soul of Success” :</p>\n<p>\"One of the biggest differences between the two stars from my perspective was Michael's superior skills as a leader,\" Jackson said. \"Though at times he could be hard on his teammates, Michael was masterful at controlling the emotional climate of the team with the power of his presence. Kobe had a long way to go before he could make that claim.”</p>\n<p>The 1% PM is looked upon as a leader in the organization. Some of the behaviors mentioned above contribute to this. In addition, the 1% PM has a very strong understanding of her product, technology and the financials. She is intimately familiar with the KPIs and metrics of success. As a result, she can represent the product team effectively in executive discussions. She has a seat at the table and frequently leads the conversations when important decisions about the product line are made.</p>\n<p>She communicates effectively across the team, but also with individuals, akin to shaking hands and kissing babies on the campaign trail, as they say. She does this genuinely and does not fake it. She negotiates, cajoles, resolves conflicts, and builds relationships, while ensuring everyone knows what ultimate success really means. The 1% PM demonstrates servant leadership because she knows that she will be successful when everyone around her is successful. Personal glory and decoration is less important to her for it’s own sake.</p>\n<p>Confidence\nThe top 1% players have supreme confidence in their ability to deliver and perform at the highest level, regardless of the high pressure stakes. When the team is down by 3 points with just a few seconds left on the clock, they want the ball in their hands. It does not mean they will win every game from that situation, but when the chips are down, they want to step up to the plate, soak the pressure and lead by action.</p>\n<p>The 1% PM exudes similar confidence. She is confident of holding her own in deep technical discussions with architects. She is confident of standing in front of a room of executives and articulating the product strategy, or making an investment case to help drive the strategy. When she visits upset and irate customers, she assures them confidently that the team has a plan in place to move the needle in the right direction. She knows she won’t be right all the time and doesn’t have to be. So her confidence is not one of arrogance. Rather, it comes from having the passion to make a difference to customers and to the organization.</p>\n<p>Confidence of the 1% PM comes from having a strong work ethic. Success is not guaranteed, but confidence eliminates fear of failure.</p>\n<p>All-Rounder\nWhen the game is over, we realize that the top 1% of the players made their impact felt in all aspects of the game - offensive rebounds, defensive rebounds, assists, high free throw shooting percentage, 3-point shots, steals, etc. They are all over the court, in fact they try and own the court.</p>\n<p>The 1% PM is also an all-rounder. In startups, in addition to being the product manager, if needed she can hack together some demo code, she goes on sales calls as the sales engineer and installs the product, she writes the datasheet and the whitepaper, and she holds the attention of 300 people on a webinar.</p>\n<p>In large companies, there are dedicated people in various functional roles. However, the 1% PM very much plays up and down the court. She meets regularly with sales engineers to understand insights from the field. She listens in on support calls. She works with marketing to understand the performance of lead generation campaigns and sales funnel analysis. She positions the value proposition and unique differentiators which form the basis of marketing messaging. She presents her product strategy and roadmap to industry analysts. She works with sales and channel teams to enable them to position and sell the product.</p>\n<p>The 1% PM plays an important role across the entire product lifecycle, way before the first line of code is written, all the way to launch, driving awareness and sales, and supporting customers.</p>\n<p>We may be tempted to say that this is fundamental for any product manager, but so many product managers are not able to cover the court, either due to lack of time, or due to lack of skills. The 1% PM knows how and where to spend her time and energy most effectively.</p>\n<p>Work Ethic\nThe top 1% players have a strong work ethic. They don't shirk. They practice hard. They don't rest on their laurels, and they don't rely on their natural talents. They don't wing it. They are perfectionists. They work on all aspects of their game.</p>\n<p>The top 1% PM also has a strong work ethic attention to detail. She does not make compromises. She puts in the necessary amount of practice before important presentations. She stays late with the team when needed. She gives equal attention to staff engineers and executives. She is always looking for learning opportunities and seeks mentors inside and outside the organization.</p>\n<p>Alignment of Vision\nThe 1% athlete is not self made. Even Michael Jordan has a coach, and he is aligned with the coach's vision for the team.</p>\n<p>The 1% PM is similarly aligned with the company vision. Her product strategy is aligned with the strategic direction and initiatives of the company. She leverages and extends the core competencies of the organization. She takes the effort to communicate and ensure understanding of the vision and strategy by everyone in the team.</p>\n<p>What do you think?</p>\n<p>The best way to get ahead of this is asking the right questions. I was lucky to find a great opportunity at my current company that had lots of processes in place for an incoming Product Manager but, in hindsight, have learned so much I wouldn’t have even thought to ask during my interview or in my first few months learning the role. In a role where so much is out of your control, having the answers to some of these questions can often be the bare minimum to meet a standard of competence.\nProduct Roadmap\nHow far in advance is the product roadmap planned?\nHow do ideas get on the roadmap?\nHow often does the roadmap change?\nHow much is the average budget for a new product feature?\nHow much time does an average feature take for release?\nHow are delays addressed for feature development?\nWhat is the company’s penchant for scope cuts vs. extended timelines?\nTechnical Expectations\nWhat is the relationship between a Product Manager and an Engineering team?\nHow often is code released? How many code repositories are used?\nHow is the testing evaluated by engineers? What role does a PM play?\nWhat systems are used to ensure successful release?\nWhat is the tech stack? What programs are used for applications? data? utilities? Devops? How much does a PM have to know in order to integrate well?\nBusiness Development\nWhat does product discovery look like?\nWho talks to the product’s users the most?\nHow often does a Product Manager talk to users?\nHow often does a Product Manager get involved in a sales deal?\nHow often does a Product Manager get involved in a go-to market strategy?\nHow are feature requests from users prioritized?\nAre there any groups of users that are prioritized over others?\nPeople Management\nWho does the Product Manager typically report to?\nHow often should a Product Manager check in with parties that they do not report to?\nHow long does it take for a Product Manager for onboard?\nHow is a PM measured when a feature completely fails?\nHow often does the growth of a feature play into the evaluation of a Product Manager?</p>\n<p>Product managers are the glue that bind the many functions that touch a product—engineering, design, customer success, sales, marketing, operations, finance, legal, and more. They not only own the decisions about what gets built but also influence every aspect of how it gets built and launched.</p>\n<p><a href=\"https://www.mckinsey.com/~/media/McKinsey/Industries/Technology%20Media%20and%20Telecommunications/High%20Tech/Our%20Insights/Product%20managers%20for%20the%20digital%20world/SVGZ-Product-managers-ex2.ashx\">https://www.mckinsey.com/~/media/McKinsey/Industries/Technology%20Media%20and%20Telecommunications/High%20Tech/Our%20Insights/Product%20managers%20for%20the%20digital%20world/SVGZ-Product-managers-ex2.ashx</a></p>\n<p><a href=\"https://www.mckinsey.com/~/media/McKinsey/Industries/Technology%20Media%20and%20Telecommunications/High%20Tech/Our%20Insights/Product%20managers%20for%20the%20digital%20world/SVGZ-Product-managers-ex1.ashx\">https://www.mckinsey.com/~/media/McKinsey/Industries/Technology%20Media%20and%20Telecommunications/High%20Tech/Our%20Insights/Product%20managers%20for%20the%20digital%20world/SVGZ-Product-managers-ex1.ashx</a></p>\n<p>Before becoming the CEOs of Google, Microsoft, and Yahoo, Sundar Pichai, Satya Nadella, and Marissa Mayer were product managers, and they learned how to influence and lead teams by shepherding products from planning to development to launch and beyond. Such experience is also valuable beyond tech: PepsiCo CEO Indra Nooyi started her career in product management–like roles at Johnson &#x26; Johnson and Mettur Beardsell, a textile firm.</p>\n<p>While today such a background remains rare among CEOs, product-management rotational programs are the new leadership-development programs for many technology companies (for example, see the Facebook Rotational Product Manager Program, the Google Associate Product Manager Program, and the Dropbox Rotation Program). Any critic of the analogy between product managers and CEOs will point out that product managers lack direct profit-and-loss responsibilities and armies of direct reports, so it is critical for product managers with ambitions for the C-suite to move into general management to broaden their experience.</p>\n<p>An intense focus on the customer is prominent among all product managers. For example, product managers at Amazon are tasked with writing press releases from the customer’s perspective to crystalize what they believe customers will think about a product, even before the product is developed.2 This press release then serves as the approval mechanism for the product itself.</p>\n<p><a href=\"https://www.linkedin.com/in/jgolden/\">https://www.linkedin.com/in/jgolden/</a> If Golden could share just one organizing principle, it would be this: Design your product teams around outcomes, not features. “A lot of people call me and ask how they should structure their product organizations. I always tell them to do it based on outcome. If you do it based on features, then you’re going to be perpetuating those features whether they’re useful or not.” Your company vision is what you want the world to look like in five-plus years — outcomes are the team mandates that will help you get there. “Outcomes define what we want to achieve for people in our community,” says Golden. (More context on this later.) Golden advises founders to focus initially on the things that are working and grow into their product vision organically. “I’ve seen company scope expand too quickly,” he says. “Normally if something is working and you double down on that, then whatever you are measuring will dramatically accelerate. If something is only half working and you need to go do something else to achieve your goal, then maybe it really wasn’t working as well as you had thought.” Airbnb optimizes for agility first and foremost by assembling interdisciplinary product teams. The notion of a group of product managers sitting together in a bullpen apart from the rest of the organization is anathema. Instead, product managers are matched with engineers, designers, and data scientists to attack business problems from all sides. This modular team structure is how Airbnb has managed to keep the spirit of an early-stage startup as it’s grown into a tech giant. “In the early days, we used to have one big meeting, with all of engineering, all of design, all of data science, and all of product management in one room. Of course, at the time that was maybe 20 people,” says Golden. “We’ve evolved from there, but we kept the core of how the team operated.” There’s no feeling of rank within each team and no room for prima donnas. “Everybody has the same ownership of impact across data, design, engineering, and product. ” If a team needs to communicate something to the rest of the company, it selects the appropriate lead — a data scientist, for example, would communicate the results of a major A/B experiment. “It’s a team that operates cohesively, versus one person who’s potentially more of a totalitarian leader.” Hire These 3 Types of PMs — You’ll Need Them All. Pioneers These are people who are excited by building prototypes, who are pumped about the riskiness of the endeavor and when creating something brand new in the world,” says Golden. Sound a lot like a founder? That’s not a coincidence; founders are typically their companies’ first product person — the ultimate pioneer. But whether you bring it to the table yourself or hire for it, this is the type of PM energy a company needs at the start. How to spot them: These risk-taking front-liners need to be scrappy, so look for someone who has entrepreneurial experience already. That might be someone who was CEO of his or her own company, or even a PM who led an exploratory team for a large company (the lead for a new product area at Google, for example). Don’t, however, assume that any startup experience equals pioneer experience. “There is a huge difference between somebody who has built something and somebody who has maintained something,” says Golden.</p>\n<p>What is your process for uncovering user needs?</p>\n<p>How do you know if you’ve achieved product market fit?</p>\n<p>Tell me a time when you did something non-scalable to jumpstart a product.</p>\n<p>I’m thinking about building “X” — what do you do to get it built in 10 days?</p>\n<p>Town Planners</p>\n<p>These are your platform managers, who take over when it’s time to build the infrastructure and systems necessary to handle scale and accommodate your product’s use cases, current and future.</p>\n<p>Good town planners are also entrepreneurs. Many town planners have technical backgrounds but that is not a hard requirement. They can also work with technical visionaries where the product manager can steer the vision to realize its practicality for the broader product team. At Airbnb, they added product management support to the core infrastructure teams to help them build technical tools to set the business up for scale through the next few years.</p>\n<p>How to spot them: “Town planners must be able to synthesize large amounts of disparate information to build technology that will service existing and unanticipated use cases,” says Golden. Don’t just look for workhorses who can lay down a solid backend foundation—these PMs also need a vision for the future product initiatives that foundation could support.</p>\n<p>Here’s what to ask to figure out if someone has the capacity to be a town planner:</p>\n<p>What metric would you measure to determine success for a platform product?</p>\n<p>Tell me about a time when you built a system that supported a variety of use cases.</p>\n<p>How do you balance building toward known cases versus unknown future use cases?</p>\n<p>How do you know if the platform is too rigid or too flexible?</p>\n<p>A brand-new enterprise needs to know when to bring on the next wave of product management. But even in an established company, all three types of product managers are critical. “The product team needs each of these PMs to be nimble and responsive. Otherwise the business won’t endure for the long term,” says Golden. “We allocate product resources across three main categories: core initiatives that focus on the existing product, new initiatives that explore possible areas of growth for the business, and platform initiatives that focus on building fundamental technological infrastructure.” Pioneers and settlers don’t become obsolete just because you’re at scale.</p>\n<p>And town building isn’t the end of the road — it’s just the groundwork for a new round of pioneering. Golden’s Payments team, for example, is primarily tasked with building a platform. But since the exchange of funds touches everything the company does, his team also contributes to many of Airbnb’s new guest and host conversations. “We’re always thinking, ‘Okay, how do we take the system that we’ve built, which is moving a lot of money around the world right now, to think about where the business is going?’”</p>\n<p><a href=\"https://s3.amazonaws.com/marquee-test-akiaisur2rgicbmpehea/s002QKmnR96eIEdHMv0I_process.jpg\">https://s3.amazonaws.com/marquee-test-akiaisur2rgicbmpehea/s002QKmnR96eIEdHMv0I_process.jpg</a></p>\n<p>By the time you reach the bottom of this flowchart, resourcing decisions may not be easy, but they’ll be clearer.</p>\n<p>“Everybody always wants more resources,” says Golden. “For the most part, nobody is saying ‘I’m fine, I don’t need to grow.’ People feel like their work can be contributing to the product, to the community, and in a high-growth company that’s usually true.” Product managers, then, need to work with founders and other company leaders to establish priorities.</p>\n<p>It’s very much a PM’s role to decide which bets to place.</p>\n<p>Every quarter, he conducts a review of each of his teams to determine the impact they’re having on the business and whether they’re hitting their goals. “We say, ‘Okay, if this team is established and we’ve articulated all our goals and we didn’t hit one — or for some reason something is off — why are we off? What happened?’” Once again, he starts at the top of the chart. “The first question is ‘Did this product or project actually fit into the product vision?’ Usually it does, but other times we’ve had to be uncomfortably honest.”</p>\n<p>It’s clear why a company might want to whip up a product team from scratch, but what about the how?\nWhen a product manager is engaged with a given team, how do you sell her on dropping everything to tackle a new challenge? If you’ve established a vision-based company culture, this is where you’ll really reap the rewards. Teams will be bought in to accomplishing a goal, not bringing a particular feature or product to market. “If you’ve done it right from the get-go—articulated your vision, outcome and goals right — it should be much easier to have a conversation about reallocating human resources,” says Golden.</p>\n<p>Decommissioning a team is often the harder side of this equation, but there too, let your product vision serve as a touchstone. Take the team through your goal-setting framework and identify where things went wrong or changed. Was it a flaw in the product vision, strategy, goal, metrics, or resourcing? “If you go through that process, then the team gets much more comfortable with the reason things didn’t work out as well as they thought,” says Golden. Moreover, in an iterative product management culture, individuals have less to fear.</p>\n<p>You can’t achieve a real culture of iteration without accepting failure. “The key to postmortems is obviously to not point fingers. It’s all about lessons learned and identifying why things happened the way they did.”</p>\n<p>From 2012 to 2013, Golden managed a team that focused on user tools. They handled all guest and host interactions after the booking and tackled many issues around reservation alterations, refunds, and cancellations. But they didn’t have a clear mission that related to an outcome.</p>\n<p>“We realized that it would be best to disperse the team into two outcome oriented teams — the booking flow team and the host team,” he says. “This enabled these two teams to realize their mandate through a wider but yet overall more simplistic scope.”</p>\n<p>To that end, he hews closely to three simple pillars: process, context, and listening.</p>\n<p>Process: Having a clear framework for making company decisions, as we’ve seen, is key. Transparently discussing the results of that process is, too.</p>\n<p>Context: A clear vision isn’t enough, though. You need to make sure everyone on the team sees that vision too. Don’t be afraid to repeat yourself. In fact, be sure to repeat yourself. “You have to communicate it all the time,” says Golden. “And as new people join the team, tell them the history of how things evolved. That context is usually really helpful.”</p>\n<p>Listening: As a team leader, Golden is also acutely aware that his communication responsibilities go both ways; just as he repeatedly shares the company’s vision with his team, he also contributes his teams’ feedback to leadership’s ongoing vision making. “You’re not going to be able to make the best decisions without actually talking to individual people and making sure that you’re addressing their concerns.”</p>\n<p>“It’s the job of a team lead — whether in product, engineering, design, or data — to communicate the what and the why. But if people don’t agree, then you have to revisit them. Anybody can push back. Challenging core fundamental assumptions is really healthy.”</p>\n<p>Beyond these three tenets of communication, Golden is not one to dictate how often teams should meet with each other, or how they manage their internal messaging. “We allow each team to figure out their own cadence, their own process and structure. We like to see each team have it’s own character—a little bit of identity.”</p>\n<p>“Again, much of the work of product management is making sure everybody understands the what and the why,\" he says. \"Leaving it up to teams to figure out how to actually make that happen empowers them to do better and find more meaning in their work. I think everyone wants a say in their daily work — that’s not just in tech land, that’s in life.”</p>\n<p>The Jobs to be Done Interviewing Style: Who are our Users Trying to Become?\nHow this popular framework can guide your user interviews.</p>\n<p>At first, I resisted Jobs to be Done.</p>\n<p>I didn’t understand how to use it. I didn’t see what it added over traditional generative interviews.  It had a lot of buzz, and it was totally out of my comfort zone. </p>\n<p>Fortunately, not too long ago, I was reintroduced to the concept and have grown to be more open-minded about different user research methodologies. And it didn’t take me long to balk at my own unwillingness to learn something new. I picked up two books: Jobs To Be Done by Tony Ulwick and Competing Against Luck by Clayton Christensen. In the weekend it took me to devour them, I was not only a convert, but also as excited as a kid in a candy shop. The methodology offered us something special, and I couldn’t wait to put this into practice. </p>\n<p>Psssst. We sat down with Jobs to be Done (JTBD) creator, Tony Ulwick, to discuss the intersection of qual research and the methodology. Watch it for free here. </p>\n<p>Understand: What is Jobs to be Done?\nSurprisingly, this is a controversial question. Since JTBD was loosely written about as a theory, there are many different views on what Jobs To Be Done is and how it should be interpreted. </p>\n<p>Some people view Jobs To Be Done as a well-branded repackaging of concepts already known to the research community, like task analysis. Others, however, believe it’s a totally new, innovative approach for how to think about your users and their decision-making process. </p>\n<p>To keep it simple, I will stay away from controversy. Instead, I’ll cover the basics and explain how you can let JTBD guide your user interviews.</p>\n<p>Jobs To Be Done encompasses the concept that users are trying to get something done, and that they “hire” certain products or services in order to make progress towards accomplishing goals. Usually, we all want to be better than we are in a given moment. We all have goals that lead us closer to our ideal self. So, we will look for, and purchase, certain products or services when our current reality does not match what we want for the future. In addition, we will also switch to a new product or service when our current solution is no longer sufficiently getting us towards our goals. </p>\n<p>Mainly, I use Jobs to be Done to answer the following questions about users:</p>\n<p>Why did a user start looking for a particular product/service? What was the trigger?\nWhy did a user hire (purchase) a product/service for the first time?\nWhy and how did a user switch between two (or more) different products/services?\nHow did a user search for new products/services?\nWhen you boil it down, we, as researchers, are simply trying to understand the hiring/purchasing patterns of our users, and what conditions have to exist for a user to start using product X, and why they would then switch from product X to product Y.</p>\n<p>Implement: Framing interviews with Jobs to be Done\nStructurally, getting started with Jobs to be Done is relatively similar to how you would begin a classic generative research session. I usually slot 60-90 minutes for the interview time, as sometimes it can take a while to get comfortable, especially if you are new to this interviewing technique. I recruit a bit differently, however. I usually screen for: </p>\n<p>People who just recently started using our product/service\nPeople who have just recently stopped using our product/service\nPeople who have not yet used our product/service\nWith these groups of people I hope to understand:</p>\n<p>Why people switch to our product/service\nWhy people switch away from our product/service\nWhat people who have not heard about our product/service are trying to accomplish and how they are currently doing that\nWhat pushes/pulls people into using our (or a competitor’s) product/service\nAs you can see, switching behavior is extremely important, as is the concept of being pushed or pulled into a product/service. A lot of these interviews are focused on why people are switching from one product/service to the next, and what happened to make them say: “Hey, I need a better solution.” </p>\n<p>And this is where Jobs To Be Done gets hard. You can’t simply ask a user why she switched to a different product/service. If you do, you won’t get to that deeper goal that is actually driving this behavior. I’ll use myself as an example.  </p>\n<p>I just recently switch all of my cleaning products to be vegan. And this was a huge pain to do. First, I live in Germany, and my level of understanding the German language is not at the point where I can distinguish exactly what product ingredients mean—and online translation often comes up with some ridiculous suggestions. Second, it is a lot of money to switch from the store-branded name to vegan products. Third, it takes a lot of research and time to find vegan cleaning products that actually work. </p>\n<p>And if you ask me why I decided to do this, I would tell you: I want to contribute to helping the environment. While that’s true, it’s a surface-level answer.</p>\n<p>If you dig deeper, you’d realize I deeply care about animals. And my decision-making process actually took place over several years. I’d realized I not only wanted to be more environmentally and animal-friendly, but I also wanted to be seen as more conscious and aware of my impact on the world. I was embarrassed at how much of a conflict I had between loving animals and using or eating animal-based products. And I was finally pushed to the decision because I was sick of my cognitive dissonance. </p>\n<p>But if you asked me about it point blank: that’s probably not what I’d tell you. </p>\n<p>In order to understand deeper goals and behavior, we need to entice users into telling us stories surrounding why they are deciding to do something. Similar to generative research, we need to probe, but we need to do so in a specific way. My interview scripts have always been relatively bare-boned, as I usually have several high-level questions I want to ask, and I let the interviewee then lead the direction of the conversation. I try to focus on the “switch event” that leads a participant to make a change. These are the main questions I always include:</p>\n<p>What other solutions did you consider before trying the product /service?\nWhat were you trying to find when you were considering those solutions?\nWhat were you trying to solve?\nTell me about how you looked for these products/services.\nWhat other solutions have you actually used?\nWhat did and didn’t you like about other solutions you’ve tried/used?\nIf this product/service wasn’t available to you, what you do instead?\nWhat solutions have the people you know tried or used?\nWhat are you doing now compared to the past?\nSince most of our memories are recalled through associations with people, places, smells or sounds, I often ask users what time of day it was, if they were at home or at work, if the TV was on in the background, and who they were. This helps get them into the mindset to tell stories that bring up feelings associated with the experiences. </p>\n<p>Once I understand the different competitors, and potentially grasp the switching behavior, I start trying to dig deeper with more emotionally questions like: </p>\n<p>When did you first realize you needed something to solve your problem?\nDid you talk to anyone else about what choices you were considering? What was this conversation like?\nWas anything recommended to you?\nWhat did you imagine using this product/service would be like?\nWhat did you want from the product/service?\nDid you have any anxiety about purchasing/using this product/service?\nWas there anything that made you nervous about using it?\nWhile conducting the interview, listen for motivations or pain points that led to a switch:</p>\n<p>Push of the situation: what was it about their particular situation that led them to look for a new solution?\nPull of the situation: what was it about the new solution that made them want to try it?\nHabits holding them back: what habits do they have that may prevent them from trying a new solution?\nAnxieties of the new solution: what anxieties did they have about trying or using a new solution?\nThis takes a lot of practice, so I do recommend trying these techniques internally with your company or with friends before venturing out to the world of your users.</p>\n<p>Jobs To Be Done suggests that users want to make a positive change in their lives, and the way they do that is through progress. If we, as researchers, focus on what the positive change is, and how to help users make that change, we can easily get users towards their desired goal.</p>\n<p>Nikki Anderson\nAct: Why is Jobs to be Done worth doing?\nFor me, Jobs To Be Done has brought a whole new perspective to user research, and unearthed different ways I can help companies succeed. As anything, it isn’t a magic potion. In fact, it’s a descriptive theory. It does not prescribe a certain way of doing things, and it is not explicit in what you should do to change. </p>\n<p>Mastering this technique is tricky and takes a lot of practice. Oftentimes, people don’t actually understand why they did something and are not able to analyze themselves in an unbiased way. </p>\n<p>Jobs To Be Done suggests that users want to make a positive change in their lives, and the way they do that is through progress. If we, as researchers, focus on what the positive change is, and how to help users make that change, we can easily get them users towards their desired goal in a much more efficient and enjoyable way. With this information, we can build powerful products with useful features that speak directly to our users. We can help transform our users into their ideal selves. </p>\n<p><a href=\"https://venturegeneratedcontent.com/\">https://venturegeneratedcontent.com/</a>\nWhen I joined Twitter, one of my key responsibilities was building the product management organization to keep pace with the growth of our engineering and design teams and to lay the foundation for scalable product development going forward.  In less than a year, we more than tripled the size of the team (total company headcount grew even faster).  As you might expect with that kind of employee growth, there were many questions about how various functions should work together, especially the product development-oriented functions of engineering, design and product management.  At Twitter, we evangelized an operating model where project teams were constructed with product, engineering and design leads, each representing three equal legs of the product development stool (with other functions also providing input and feedback throughout the development process).  However, as the teams began working under this model, it became clear that each function was struggling with defining its role relative to the roles of other functions.  Who should be involved in what conversations?  Where were the lines drawn?  Who was the “decider”?  And like many companies, we were faced with the oft-asked existential questions of “Is product management needed?” and “What role does product management play in product development?”</p>\n<p>Given all of these questions, my product team needed a reminder about why they were all there as individuals and as a product management function.  Fortunately, the web offers many excellent write-ups and conversations about what it means to be a great product manager.  But I also wanted to share my personal views on product management, developed through years of product success and failure, particularly because I believe that product management is more an attitude than a set of skills.</p>\n<p>Below is the description of the product manager’s mentality that I shared with the team at Twitter.  I was told that it proved helpful to many of them (hopefully it still is!) as they worked with their engineering and design peers and I’m hopeful that it will be equally useful to product people (current and aspiring) who are trying to do the difficult but incredibly gratifying job of product management.  In one way or another, it’s a job I’ll always have and love.</p>\n<p>—</p>\n<p>As Product Managers, we are the CEOs of our products.  We love products.  We focus first on delivering value to our users.  We know who we are building for and what we are building.  We know why we are building it and where we are building to long term.  We communicate the who, what, why and where clearly, concisely and frequently.  We communicate with anyone and everyone who is interested, but most importantly to our teams.  We let our teams determine how to build.</p>\n<p>We pursue excellence by thinking bigger and bolder than is comfortable.  We don’t settle for good enough.  We choose right over easy.  We choose simplicity over complexity.  We don’t make excuses.  We take responsibility.  We are tirelessly curious.  We respect our competitors, not fear them.  We understand why we win and what we must do to keep winning.</p>\n<p>We lead by example.  We succeed by making others successful.  We listen first and make certain that others feel that they’ve been heard.  We pursue diverse opinions.  We rally our teams behind a vision that yields passion and commitment.  We value and foster strong team relationships.</p>\n<p>We are determined and positive.  We use words and take actions that embody a can-do attitude.  We trust others to do their jobs well but we verify that they are done right.  We are honest, direct and empathetic.  We adjust to our audiences and situations.  We are decisive when needed, but always collaborative.</p>\n<p>We know the definition of success.  We hold ourselves and our teams accountable to it.  We set the bar high.  We provide focus through prioritization.  We increase quality through iteration.  We don’t like surprises, so we prepare for them.  We pay attention to the details because we care.  We fill in the gaps and do whatever it takes to get the job done.  We don’t wait to be told what to do.  We leverage data but aren’t slaves to it.  We are honest.  We seek the truth.</p>\n<p>We take time to reflect.  We don’t fear failure.  We strive to improve.</p>\n<p>We are Product Managers.</p>\n<p>Engineering to Product - Learnings and Observations\nThis essay is a recap of 3 years of product management experience (After 10 years of being software developer). I worked on projects that had direct business impact - fun, stressful, and intense experience. No regrets 😉</p>\n<p>I sorted my observations and learnings by their subjective importance.</p>\n<p>People manager first\nI started to realize this is important when I was at least one year into product management. If you’re running a team, maintaining team health is an essential part of your job.</p>\n<p>In theory, you’ll have an engineering manager who is responsible for that, but in reality, you should be laser focused on it yourself. At the end - even if you have an excellent backlog, full of brilliant ideas - if the team is not feeling well or you don’t have team trust - you won’t be able to execute, and everything will inevitably fall apart.</p>\n<p>Do 1-1s with engineers and designers. Make sure that they are happy and motivated. Build trust.</p>\n<p>Invest in yourself and learn a few bits about psychology, building relationships with people, and engineering management.</p>\n<p>You are in charge\nYou’re responsible for project outcomes. Listen to your team, your boss, boss of your boss, friends, family, that random person from a coffee shop - be informed and process information, but never forget that you are in charge and you are making decisions.</p>\n<p>Be bold, make decisions yourself, and be prepared to carry responsibility.</p>\n<p>Democracy and business do not blend.</p>\n<p>Conserve energy (part 1 - you)\nManagement is a 24/7 job. Even if you show up in the office for a few hours, you’ll inevitably think about the project 24/7. It’s exhausting and exhausted people aren’t good at making decisions.</p>\n<p>Consider your job a marathon, not a sprint. Don’t work in the evenings. Don’t work on the weekends. Re-charge. Take vacations often. Fully disconnect during vacations/weekends/time off.</p>\n<p>Conserve energy (part 2 - team, a.k.a. it’s ok to be idle)\nThis thing applies both to you and your team - it’s ok to be idle. Make sure that team understands that and comfortable with that. If you don’t know what to work on - let the team know. Do not try to keep the team busy. Let people work on whatever they want to work on, take time to learn something new, refactor that annoying piece of tech debt from the past or just rest and re-charge.</p>\n<p>Do not work on low priority stuff or 10-year-old bugs to fill the time - in the long run, it’s counterproductive and lowers team morale.</p>\n<p>And never say no to vacation requests. Even if they are coming at the worst time. Think long term.</p>\n<p>Stay on the maker schedule*\nAvoid meetings congestion - skip meetings if you don’t see the value. Find a polite way to skip and avoid meetings that don’t bring value to you or your team. Provide feedback to meeting owners.</p>\n<p>1-1s are for everything. 1-1s are the most important and productive meetings. Take as much value from them as you can. Prepare the agenda in advance. Never skip them (it can send the wrong message). Have them scheduled for the same time always. Make them a habit. (I usually schedule them close to each other and block 2-4 hours every week for them)</p>\n<p>Write > Talk. Unless it’s bad news or something that could be interpreted wrong (because it will always be).</p>\n<p>Delegate everything (and grow your team)\nIt is part of - people manager first thing - grow your team, let team members be in charge. Create safety nets, let people make mistakes and be wrong.</p>\n<p>A few techniques that worked for me:</p>\n<p>One of the team members is a scrum master. This role is not only an accountant or meeting moderator. The scrum master should be able to answer questions during standups and be your ambassador. Invest time in training. Rotate every quarter/year.\nWhen you’re off by any reason (vacation, sick, etc.) ask one of the team members to assume product owner role instead of you. They should drop engineering/design and pretend that it’s a full-time job. Let this person plan, change backlog, attend all meetings instead of you and be in charge. (Safety net - if you’ll drive in a wrong direction we’ll fix it)\nTeam members do demos - let people show off their work in front of the audience. Stakeholders must be present at this meeting. Invest time into training and making sure that people understand what’s the purpose of the demo and how to do it.\nAlways ask for input on backlog or roadmap during 1-1s. I don’t see much value in doing it during group meetings because people tend to be more closed and less sincere. 1-1 is a perfect time. If you do it every week, it gets into the habit, and people inevitably think about it before 1-1s.\nAlways be in the planning mode\nDo not put it off for an official “planning meeting” or “backlog grooming.” Planning is a vital part of your job - groom and review your backlog every day - if something changed or you learned something new - adjust immediately.</p>\n<p>As a bonus, you’ll recover time by combining staying in planning mode and discussing product future with the team during 1-1s. You’ll be able to drop “official” plannings. These meetings tend to be long and exhausting. Many times they end up in a format where 2 persons argue about a small thing and the rest of the team just listening and thinking about what they could do better with their time.</p>\n<p>Data\nData informs everything. Do it yourself (or delegate within your team). Learn SQL and Statistics 101. Do not depend on other teams. Data is your job.</p>\n<p>Start every project with data infrastructure. If you can’t measure improvement - there is no improvement.</p>\n<p>I always set aside 5-10 minutes between demo and retrospective to do data demo for stakeholders. Walk through metrics and tell what we are going to do next sprint to drive team metrics. I find that it forces me to dig deeper into the data and avoid working on things that do not drive metrics.</p>\n<p>Pursue the big thing\nDistractions creep into the backlog. Review and purge often. Skip bugs unless they are that bad. Bugs tend to eat 90% of the time in return of 10% improvement.</p>\n<p>Focus on one metric and drop anything that doesn’t affect it.</p>\n<p>Get thing out of the door ASAP\nMake it run, make it right, make it fast transfers perfectly to product management.</p>\n<p>Release the product as soon as it looks like something usable, and then iterate on the live product. Perfection is the enemy of good.</p>\n<p>Constant cadence of iteration helps a lot with meeting deadlines (and predicting misses).</p>\n<p>The Process\nPick your processes and stick to it.</p>\n<p>Adjust by doing retrospectives and carefully listening during 1-1s.</p>\n<p>Long meetings are the worst - avoid them at all cost. Always moderate. Ask people to follow-up 1-1. If there is a meeting that needs more than 30 minutes - refactor it by splitting, canceling, changing participants.</p>\n<p>Cross team communication (a.k.a The Politics)\nPolitics and cross-team dynamics are very fluid and company depending.</p>\n<p>A few things I learned:</p>\n<p>“No” is the default answer. (But never say “no” be a polite and diplomatic person). People around are asking for random things that are important to them around your area of ownership. Use it as an input and consider it but do not jump into it or you are risking saturating your backlog with random things and impeding work on The Big Thing.\nAsk for help or advice very carefully. You’re sharing responsibility when asking for help. People will (unconsciously) expect you to follow their advice and become sad if you don't. If you are not going to follow their advice — it’s better to avoid asking.\nReading recommendations</p>\n<h2>Product Roadmap</h2>\n<h2>Technical Requirements</h2>\n<h2>Design Requirements</h2>\n<h2>Business Development</h2>\n<h2>People Management</h2>\n<h2>Resources</h2>\n<h3>Sources</h3>\n<ul>\n<li><a href=\"https://blog.coinbase.com/a-letter-to-a-new-product-manager-d5d96c228bf4\">A Letter To A New Product Manager by Brian Armstrong</a></li>\n<li><a href=\"https://a16z.com/2012/06/15/good-product-managerbad-product-manager/\">Good Product Manager/Bad Product Manager by Ben Horowitz</a></li>\n<li><a href=\"https://firstround.com/review/the-power-of-the-elastic-product-team-airbnbs-first-pm-on-how-to-build-your-own/\">https://firstround.com/review/the-power-of-the-elastic-product-team-airbnbs-first-pm-on-how-to-build-your-own/</a></li>\n</ul>","frontmatter":{"date":"04 March, 2020","path":"/blog/on-product-management","title":"On Product Management"},"fields":{"readingTime":{"text":"54 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}