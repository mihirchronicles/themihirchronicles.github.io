{"data":{"markdownRemark":{"html":"<p>This is one of my favourite things in JavaScript. Not only is it simple and easy to use but it's also applicable to lots of situations <strong>and</strong> it can replace more verbose syntax (like <code class=\"language-text\">if</code> statements). It looks something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> hoursOfSleep <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> timeForSleep <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hoursOfSleep <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> \n    <span class=\"token string\">\"Yup, no more phone for you\"</span> <span class=\"token punctuation\">:</span> \n    <span class=\"token string\">\"Ah nah, a few more minutes of phone time won't hurt\"</span><span class=\"token punctuation\">;</span> </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Notice the <strong>?</strong> and the <strong>:</strong></p>\n<p>These are the important parts.</p>\n<p>If the condition (in this case <code class=\"language-text\">hoursOfSleep</code>) in front of the question mark evaluates to true, the value of the first expression before the colon is returned. If the condition in front of the question mark evaluates to false, the value of the second expression after the colon is returned. As you can see, if you have had less than 8 hours of sleep, you shouldn't be using your phone.</p>\n<p>Ternary operators are really flexible and can be used in a number of ways. You can stack them together:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> catsRule <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">const</span> dogsDrool <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">const</span> catDog <span class=\"token operator\">=</span> catsRule <span class=\"token operator\">?</span> \n    <span class=\"token punctuation\">(</span>dogsDrool <span class=\"token operator\">?</span> <span class=\"token string\">\"Let's all live in harmony\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Both cats and dogs drool\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">(</span>dogsDrool <span class=\"token operator\">?</span> <span class=\"token string\">\"Dogs are cool, nearly as cool as cats\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"Dogs and cats can be friends\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>This outputs <code class=\"language-text\">&quot;Both cats and dogs drool&quot;</code>, and it's also total nonsense but I hope you had fun staring at it and trying to figure it out. You don't even need to use the parentheses, and can also use multiple statements separated by commas. You can return statements in functions. You can use them in place of bulky <code class=\"language-text\">if/else</code> statements with much nicer-to-read code. The question mark means <code class=\"language-text\">if</code> and the colon means <code class=\"language-text\">else</code>.</p>\n<p>I use ternary operators at work all the time. I hope you enjoy them as much as I do. Check out the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">MDN</a> page for some examples. This <a href=\"https://scotch.io/tutorials/understand-the-javascript-ternary-operator-like-abc\">post</a> is lovely too.</p>","frontmatter":{"date":"01 July, 2018","path":"/explore/ternary-operators","title":"Ternary Operators"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}